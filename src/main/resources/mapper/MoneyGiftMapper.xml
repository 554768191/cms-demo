<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ncs.demo.dao.MoneyGiftDao" >
  <resultMap id="BaseResultMap" type="com.ncs.demo.po.MoneyGift" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="GIVEN_DATE" property="givenDate" jdbcType="VARCHAR" />
    <result column="MONEY" property="money" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="REASON" property="reason" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="VARCHAR" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="INTEGER" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, NAME, GIVEN_DATE, MONEY, USER_ID, REASON, STATUS, CREATE_TIME, UPDATE_USER,
    UPDATE_TIME
  </sql>
  <select id="selectMoneyGiftById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from money_gift
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from money_gift
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.ncs.demo.po.MoneyGift" >
    insert into money_gift (NAME, GIVEN_DATE,
      MONEY, USER_ID, REASON, STATUS,
      CREATE_TIME, UPDATE_USER,
      UPDATE_TIME)
    values ( #{name,jdbcType=VARCHAR}, #{givenDate,jdbcType=DATE},
      #{money,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{reason,jdbcType=VARCHAR}, 1,
      now(), #{updateUser,jdbcType=INTEGER},
      now())
  </insert>
  <insert id="insertSelective" parameterType="com.ncs.demo.po.MoneyGift" >
    insert into money_gift
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="name != null" >
        NAME,
      </if>
      <if test="givenDate != null" >
        GIVEN_DATE,
      </if>
      <if test="money != null" >
        MONEY,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="reason != null" >
        REASON,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="givenDate != null" >
        #{givenDate,jdbcType=DATE},
      </if>
      <if test="money != null" >
        #{money,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ncs.demo.po.MoneyGift" >
    update money_gift
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="givenDate != null" >
        GIVEN_DATE = #{givenDate,jdbcType=DATE},
      </if>
      <if test="money != null" >
        MONEY = #{money,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="reason != null" >
        REASON = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ncs.demo.po.MoneyGift" >
    update money_gift
    set NAME = #{name,jdbcType=VARCHAR},
      GIVEN_DATE = #{givenDate,jdbcType=DATE},
      MONEY = #{money,jdbcType=INTEGER},
      REASON = #{reason,jdbcType=VARCHAR},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      UPDATE_TIME = now()
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <update id="logicDelete" parameterType="com.ncs.demo.po.MoneyGift" >
    update money_gift
    set
    STATUS = 0,
    UPDATE_USER = #{updateUser,jdbcType=INTEGER},
    UPDATE_TIME = now()
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectMoneyGift" parameterType="java.util.HashMap" resultMap="BaseResultMap">
    SELECT * FROM MONEY_GIFT
    <where>
      <if test="name != null  and name != '' " >
        AND NAME like '%${name}%'
      </if>
      <if test="givenDate != null and givenDate != ''" >
        AND GIVEN_DATE = #{givenDate}
      </if>
      AND USER_ID = #{userId}
      AND STATUS = 1
    </where>
  </select>

  <select id="selectMoneyGiftCount" parameterType="java.util.HashMap" resultType="int">
    SELECT COUNT(1) FROM MONEY_GIFT
    <where>
      <if test="name != null  and name != '' " >
        AND NAME like '%${name}%'
      </if>
      <if test="givenDate != null and givenDate != ''" >
        AND GIVEN_DATE = #{givenDate}
      </if>
      AND USER_ID = #{userId}
      AND STATUS = 1
    </where>
  </select>

</mapper>